<controls:MetroWindow x:Class="FormotsGUI.Pages.Formulaires.FormulaireChoiceListForm"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                      xmlns:wpf="clr-namespace:Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WPF;assembly=Microsoft.Practices.EnterpriseLibrary.Validation.Integration.WPF"
                      xmlns:dto="clr-namespace:FormotsCommon.DTO;assembly=FormotsCommon"
                      xmlns:userControls="clr-namespace:FormotsGUI.UserControls"
                      dialogs:DialogParticipation.Register="{Binding}"
                      mc:Ignorable="d"
                      GlowBrush="{DynamicResource AccentColorBrush}"
                      BorderThickness="1"
                      WindowStartupLocation="CenterScreen"
                      VerticalAlignment="Center"
                      Width="800" Height="Auto"
                      SizeToContent="Height"
                      Title="Consultations"
                      Name="FormulaireChoice_Window">

    <!--<Window.Resources>
        <ResourceDictionary>
            <utils:BoolInverterConverter x:Key="BoolInverterConverter" />
            <utils:IsNullToBoolConverter x:Key="IsNullToBoolConverter" />
        </ResourceDictionary>
    </Window.Resources>-->

    <StackPanel
        Background="{DynamicResource ValidationBrush2}">
        
        <!--Bouton d'ouverture de la fiche MA complète-->
            <!--<WrapPanel DockPanel.Dock="Top"
                       Name="LayoutRoot">
                <Button Width="134"
                        Margin="5 5 0 5"
                        Name="EditCommandButton"
                        Command="{Binding ConsultMaCommand}">
                    <StackPanel Orientation="Horizontal">
                    <Label Padding="0">Consulter fiche MA</Label>
                        <Image Margin="{StaticResource IconMargin}"
                               Width="{StaticResource IconButtonSize}"
                               Source="{StaticResource EditIcon}" />
                    </StackPanel>
                </Button>
            </WrapPanel>-->
        <Label DockPanel.Dock="Top"
               Content="Veuillez choisir un type de consultation :"
               FontSize="18" />
        
        <!--FORMULAIRES-->
        <GroupBox Header="Formulaires">
            <StackPanel>
                    <DataGrid 
                        AutoGenerateColumns="False"
                        ItemsSource="{Binding FormulaireTypesList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        SelectedValue="{Binding SelectedFormulaireType, Mode=TwoWay}"
                        CanUserAddRows="false"
                        IsReadOnly="True"
                        VerticalScrollBarVisibility="Auto"
                        HorizontalScrollBarVisibility="Auto">
                    <DataGrid.InputBindings>
                        <MouseBinding Gesture="LeftDoubleClick" Command="{Binding AddFormulaireTypeCommand}"/>
                    </DataGrid.InputBindings>
                    <DataGrid.Columns>
                        <DataGridTextColumn Width="*" Header="Code" Binding="{Binding Code}" />
                        <DataGridTextColumn Width="*" Header="Nom" Binding="{Binding Libelle}" />
                        <!--<DataGridTextColumn Width="*" Header="Nom" Binding="{Binding Nom}" />
                <DataGridTextColumn Width="*" Header="Prénom" Binding="{Binding Prenom}" />
                <DataGridTextColumn Width="*" Header="Date de naissance"
                                    Binding="{Binding DateNaissance, StringFormat=dd/MM/yyyy}" />
                <DataGridTextColumn Width="*" Header="Mobile" Binding="{Binding NumeroTelephonePortable}" />
                <DataGridTextColumn Width="*" Header="Courriel" Binding="{Binding Email}" />-->
                    </DataGrid.Columns>
                </DataGrid>
                <controls:ProgressRing IsActive="{Binding ShowProgressBar}" />
            </StackPanel>
        </GroupBox>

        <!--Boutons de sauvegarde et d'annulation-->
        <WrapPanel Margin="5 20"
                   HorizontalAlignment="Center">
            <!--<Button Name="SaveUserButton"
                    Grid.Column="0" Width="100"
                    Margin="0 5 0 5"
                    Visibility="{Binding IsSaveButtonVisible}"
                    Command="{Binding SaveDossierCommand}"
                    CommandParameter="{Binding ElementName=Dossier_AddWindow}">
                <StackPanel Orientation="Horizontal">
                    <Label Padding="0">Enregistrer</Label>
                    <Image Margin="{StaticResource IconMargin}"
                           Width="{StaticResource IconButtonSize}"
                           Source="{StaticResource SaveIcon}" />
                </StackPanel>
                --><!--<Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="IsEnabled" Value="False"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition 
                                        Binding="{Binding 
                                        Path=(Validation.HasError), 
                                        ElementName=FirstNameTextbox}" 
                                        Value="False"/>
                                    <Condition 
                                        Binding="{Binding 
                                        Path=(Validation.HasError), 
                                        ElementName=LastNameTextbox}" 
                                        Value="False"/>
                                    <Condition 
                                        Binding="{Binding 
                                        Path=(Validation.HasError), 
                                        ElementName=LoginTextbox}" 
                                        Value="False"/>
                                    <Condition 
                                        Binding="{Binding 
                                        Path=(Validation.HasError), 
                                        ElementName=PasswordTextbox}" 
                                        Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>--><!--
            </Button>-->
            <Button Name="ValidateUserButton"
                    Width="100"
                    Margin="10 5 0 5"
                    Command="{Binding AddFormulaireTypeCommand}">
                <StackPanel Orientation="Horizontal">
                    <Label Padding="0">Valider</Label>
                    <Image Margin="{StaticResource IconMargin}"
                           Width="{StaticResource IconButtonSize}"
                           Source="{StaticResource ValidateIcon}" />
                </StackPanel>
                <!--<Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="IsEnabled" Value="False"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition 
                                        Binding="{Binding 
                                        Path=(Validation.HasError), 
                                        ElementName=FirstNameTextbox}" 
                                        Value="False"/>
                                    <Condition 
                                        Binding="{Binding 
                                        Path=(Validation.HasError), 
                                        ElementName=LastNameTextbox}" 
                                        Value="False"/>
                                    <Condition 
                                        Binding="{Binding 
                                        Path=(Validation.HasError), 
                                        ElementName=LoginTextbox}" 
                                        Value="False"/>
                                    <Condition 
                                        Binding="{Binding 
                                        Path=(Validation.HasError), 
                                        ElementName=PasswordTextbox}" 
                                        Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>-->
            </Button>
            <Button Width="100"
                    Margin="10 5 0 5"
                    Command="{Binding CloseCommand}"
                    CommandParameter="{Binding ElementName=MedecinAppelant_AddWindow}">
                <StackPanel Orientation="Horizontal">
                    <Label Padding="0">Fermer</Label>
                    <Image Margin="{StaticResource IconMargin}"
                           Width="{StaticResource IconButtonSize}"
                           Source="{StaticResource CancelIcon}" />
                </StackPanel>
            </Button>
        </WrapPanel>
    </StackPanel>
</controls:MetroWindow>